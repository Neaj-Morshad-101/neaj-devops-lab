# Source: milvus/templates/datanode-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-milvus-datanode
  namespace: milvus-cluster
  labels:
    helm.sh/chart: milvus-5.0.4
    app.kubernetes.io/name: milvus
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.6.3"
    app.kubernetes.io/managed-by: Helm
    component: "datanode"
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: metrics
      protocol: TCP
      port: 9091
      targetPort: metrics
  selector:
    app.kubernetes.io/name: milvus
    app.kubernetes.io/instance: my-release
    component: "datanode"
---
# Source: milvus/templates/mixcoord-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-milvus-mixcoord
  namespace: milvus-cluster
  labels:
    helm.sh/chart: milvus-5.0.4
    app.kubernetes.io/name: milvus
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.6.3"
    app.kubernetes.io/managed-by: Helm
    component: "mixcoord"
spec:
  type: ClusterIP
  ports:
    - name: metrics
      protocol: TCP
      port: 9091
      targetPort: metrics
  selector:
    app.kubernetes.io/name: milvus
    app.kubernetes.io/instance: my-release
    component: "mixcoord"
---
# Source: milvus/templates/querynode-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-milvus-querynode
  namespace: milvus-cluster
  labels:
    helm.sh/chart: milvus-5.0.4
    app.kubernetes.io/name: milvus
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.6.3"
    app.kubernetes.io/managed-by: Helm
    component: "querynode"
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: metrics
      protocol: TCP
      port: 9091
      targetPort: metrics
  selector:
    app.kubernetes.io/name: milvus
    app.kubernetes.io/instance: my-release
    component: "querynode"
---
# Source: milvus/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-milvus
  namespace: milvus-cluster
  labels:
    helm.sh/chart: milvus-5.0.4
    app.kubernetes.io/name: milvus
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.6.3"
    app.kubernetes.io/managed-by: Helm
    component: "proxy"
spec:
  type: ClusterIP
  ports:
    - name: milvus
      port: 19530
      protocol: TCP
      targetPort: milvus
    - name: metrics
      protocol: TCP
      port: 9091
      targetPort: metrics
  selector:
    app.kubernetes.io/name: milvus
    app.kubernetes.io/instance: my-release
    component: "proxy"
---
# Source: milvus/templates/streamingnode-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-release-milvus-streamingnode
  namespace: milvus-cluster
  labels:
    helm.sh/chart: milvus-5.0.4
    app.kubernetes.io/name: milvus
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.6.3"
    app.kubernetes.io/managed-by: Helm
    component: "streamingnode"
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: metrics
      protocol: TCP
      port: 9091
      targetPort: metrics
  selector:
    app.kubernetes.io/name: milvus
    app.kubernetes.io/instance: my-release
    component: "streamingnode"
---
# Source: milvus/templates/datanode-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-milvus-datanode
  namespace: milvus-cluster
  labels:
    helm.sh/chart: milvus-5.0.4
    app.kubernetes.io/name: milvus
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.6.3"
    app.kubernetes.io/managed-by: Helm
    component: "datanode"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: milvus
      app.kubernetes.io/instance: my-release
      component: "datanode"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: milvus
        app.kubernetes.io/instance: my-release
        component: "datanode"
        
      annotations:
        checksum/config: 3586f8aef7d589d46d8d5967d3261926643189fa9a40f490d8d5c10596b10d0e
        
    spec:
      serviceAccountName: default
      containers:
      - name: datanode
        image: "milvusdb/milvus:v2.6.2"
        imagePullPolicy: IfNotPresent
        args: [ "milvus", "run", "datanode" ]
        ports:
          - name: datanode
            containerPort: 21124
            protocol: TCP
          - name: metrics
            containerPort: 9091
            protocol: TCP
        livenessProbe:
          tcpSocket:
            port: metrics
          initialDelaySeconds: 90
          periodSeconds: 30
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 5
        readinessProbe:
          httpGet:
            path: /healthz
            port: metrics
          initialDelaySeconds: 90
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 5
        resources:
          {}
        volumeMounts:
        - name: milvus-config
          mountPath: /milvus/configs/default.yaml
          subPath: default.yaml
          readOnly: true
        - name: milvus-config
          mountPath: /milvus/configs/user.yaml
          subPath: user.yaml
          readOnly: true
        - mountPath: /milvus/tools
          name: tools
      volumes:
      - name: milvus-config
        configMap:
          name: my-release-milvus
      - name: tools
        emptyDir: {}
---
# Source: milvus/templates/mixcoord-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-milvus-mixcoord
  namespace: milvus-cluster
  labels:
    helm.sh/chart: milvus-5.0.4
    app.kubernetes.io/name: milvus
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.6.3"
    app.kubernetes.io/managed-by: Helm
    component: "mixcoord"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: milvus
      app.kubernetes.io/instance: my-release
      component: "mixcoord"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: milvus
        app.kubernetes.io/instance: my-release
        component: "mixcoord"
      annotations:
        checksum/config: 3586f8aef7d589d46d8d5967d3261926643189fa9a40f490d8d5c10596b10d0e
    spec:
      serviceAccountName: default
      initContainers:
      containers:
      - name: mixcoord
        image: "milvusdb/milvus:v2.6.2"
        imagePullPolicy: IfNotPresent
        args: [ "milvus", "run", "mixture", "-rootcoord", "-querycoord", "-datacoord", "-indexcoord" ]
        ports:
          - name: metrics
            containerPort: 9091
            protocol: TCP
        livenessProbe:
          tcpSocket:
            port: metrics
          initialDelaySeconds: 90
          periodSeconds: 30
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 5
        readinessProbe:
          httpGet:
            path: /healthz
            port: metrics
          initialDelaySeconds: 90
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 5
        resources:
          {}
        volumeMounts:
        - name: milvus-config
          mountPath: /milvus/configs/default.yaml
          subPath: default.yaml
          readOnly: true
        - name: milvus-config
          mountPath: /milvus/configs/user.yaml
          subPath: user.yaml
          readOnly: true
        - mountPath: /milvus/tools
          name: tools
      volumes:
      - name: milvus-config
        configMap:
          name: my-release-milvus
      - name: tools
        emptyDir: {}
---
# Source: milvus/templates/proxy-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-milvus-proxy
  namespace: milvus-cluster
  labels:
    helm.sh/chart: milvus-5.0.4
    app.kubernetes.io/name: milvus
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.6.3"
    app.kubernetes.io/managed-by: Helm
    component: "proxy"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: milvus
      app.kubernetes.io/instance: my-release
      component: "proxy"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: milvus
        app.kubernetes.io/instance: my-release
        component: "proxy"
      annotations:
        checksum/config: 3586f8aef7d589d46d8d5967d3261926643189fa9a40f490d8d5c10596b10d0e
    spec:
      serviceAccountName: default
      containers:
      - name: proxy
        image: "milvusdb/milvus:v2.6.2"
        imagePullPolicy: IfNotPresent
        args: [ "milvus", "run", "proxy" ]
        ports:
          - name: milvus
            containerPort: 19530
            protocol: TCP
          - name: metrics
            containerPort: 9091
            protocol: TCP
        livenessProbe:
          tcpSocket:
            port: metrics
          initialDelaySeconds: 90
          periodSeconds: 30
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 5
        readinessProbe:
          httpGet:
            path: /healthz
            port: metrics
          initialDelaySeconds: 90
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 5
        resources:
          {}
        volumeMounts:
        - name: milvus-config
          mountPath: /milvus/configs/default.yaml
          subPath: default.yaml
          readOnly: true
        - name: milvus-config
          mountPath: /milvus/configs/user.yaml
          subPath: user.yaml
          readOnly: true
        - mountPath: /milvus/tools
          name: tools
      volumes:
      - name: milvus-config
        configMap:
          name: my-release-milvus
      - name: tools
        emptyDir: {}
---
# Source: milvus/templates/querynode-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-milvus-querynode
  namespace: milvus-cluster
  labels:
    helm.sh/chart: milvus-5.0.4
    app.kubernetes.io/name: milvus
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.6.3"
    app.kubernetes.io/managed-by: Helm
    component: "querynode"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: milvus
      app.kubernetes.io/instance: my-release
      component: "querynode"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: milvus
        app.kubernetes.io/instance: my-release
        component: "querynode"
      annotations:
        checksum/config: 3586f8aef7d589d46d8d5967d3261926643189fa9a40f490d8d5c10596b10d0e
    spec:
      serviceAccountName: default
      initContainers:
      containers:
      - name: querynode
        image: "milvusdb/milvus:v2.6.2"
        imagePullPolicy: IfNotPresent
        args: [ "milvus", "run", "querynode" ]
        ports:
          - name: querynode
            containerPort: 21123
            protocol: TCP
          - name: metrics
            containerPort: 9091
            protocol: TCP
        livenessProbe:
          tcpSocket:
            port: metrics
          initialDelaySeconds: 90
          periodSeconds: 30
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 5
        readinessProbe:
          httpGet:
            path: /healthz
            port: metrics
          initialDelaySeconds: 90
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 5
        resources:
          {}
        volumeMounts:
        - name: milvus-config
          mountPath: /milvus/configs/default.yaml
          subPath: default.yaml
          readOnly: true
        - name: milvus-config
          mountPath: /milvus/configs/user.yaml
          subPath: user.yaml
          readOnly: true
        - mountPath: /milvus/tools
          name: tools
        - mountPath: /var/lib/milvus/data
          name: disk
      volumes:
      - name: milvus-config
        configMap:
          name: my-release-milvus
      - name: tools
        emptyDir: {}
      - name: disk
        emptyDir: {}
---
# Source: milvus/templates/streamingnode-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-release-milvus-streamingnode
  namespace: milvus-cluster
  labels:
    helm.sh/chart: milvus-5.0.4
    app.kubernetes.io/name: milvus
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/version: "2.6.3"
    app.kubernetes.io/managed-by: Helm
    component: "streamingnode"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: milvus
      app.kubernetes.io/instance: my-release
      component: "streamingnode"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: milvus
        app.kubernetes.io/instance: my-release
        component: "streamingnode"
      annotations:
        checksum/config: 3586f8aef7d589d46d8d5967d3261926643189fa9a40f490d8d5c10596b10d0e
    spec:
      serviceAccountName: default
      initContainers:
      containers:
      - name: streamingnode
        image: "milvusdb/milvus:v2.6.2"
        imagePullPolicy: IfNotPresent
        args: [ "milvus", "run", "streamingnode" ]
        ports:
          - name: streamingnode
            containerPort: 22222
            protocol: TCP
          - name: metrics
            containerPort: 9091
            protocol: TCP
        livenessProbe:
          tcpSocket:
            port: metrics
          initialDelaySeconds: 90
          periodSeconds: 30
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 5
        readinessProbe:
          httpGet:
            path: /healthz
            port: metrics
          initialDelaySeconds: 90
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 5
        resources:
          {}
        volumeMounts:
        - name: milvus-config
          mountPath: /milvus/configs/default.yaml
          subPath: default.yaml
          readOnly: true
        - name: milvus-config
          mountPath: /milvus/configs/user.yaml
          subPath: user.yaml
          readOnly: true
        - mountPath: /milvus/tools
          name: tools
        - mountPath: /var/lib/milvus
          name: woodpecker
      volumes:
      - name: milvus-config
        configMap:
          name: my-release-milvus
      - name: tools
        emptyDir: {}
      - name: woodpecker
        emptyDir: {}

