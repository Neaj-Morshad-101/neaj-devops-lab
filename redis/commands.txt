For Redis
`redis-cli -h ${host} -p ${port} -a ${password} -n <db_number>`
(Redis 6.0+): `redis-cli -h ${host} -p ${port} --user ${username} -a ${password} -n <db_number>`
<uri> option: `redis-cli -u redis://user:password@host:port/dbnum`

with TLS:
`redis-cli -h ${host} -p ${port} --tls --cert /path/to/client.crt --key /path/to/client.key --cacert /path/to/ca.crt --user ${username} -a ${password} -n <db_number>`
<uri> option: `redis-cli -u rediss://username:password@host:port/dbnum --cacert /path/to/ca.crt --cert /path/to/client.crt --key /path/to/client.key`




COMMANDS: 
keys * 
cluster nodes 
cluster info
info 


To check all keys in the redis cluser: 
redis-cli -h localhost CLUSTER NODES \
  | grep master \
  | awk '{print $2}' \
  | cut -f1 -d '@' \
  | xargs -I '{}' redis-cli -u redis://{} --scan



redis-cli --tls --cert "/certs/client.crt" --key "/certs/client.key" --cacert "/certs/ca.crt"





openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout ./ca.key -out ./ca.crt -subj "/CN=redis/O=kubedb"


kubectl create secret tls redis-ca \
     --cert=ca.crt \
     --key=ca.key \
     --namespace=demo

     



Monitoring:

kubectl port-forward -n monitoring svc/prometheus-kube-prometheus-prometheus 9090
kubectl port-forward -n monitoring prometheus-prometheus-kube-prometheus-prometheus-0 9090

http://localhost:9090/targets?search=


kubectl port-forward -n demo svc/rd-stand-mon-stats 56790
http://localhost:56790/metrics

data_source_name: 'server=ms-stand-monitor-0.ms-stand-monitor-pods.demo.svc;user id=sa;password=Pa55w0rd!;database=master;encrypt=true;TrustServerCertificate=true;'


kubectl port-forward -n monitoring svc/prometheus-grafana 3000:80
http://localhost:3000/login
