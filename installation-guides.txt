###### KubeDB Installation Commands ############

export KUBECONFIG=/home/neaj/Downloads/neaj-kubeconfig.yaml
export REGISTRY=neajmorshad
export LICENSE_FILE=$HOME/Downloads/kubedb-license-8c46fc66-d30b-40b0-b59b-9c907016b91a.txt 

kubectl get ns kube-system -o=jsonpath='{.metadata.uid}'

8c46fc66-d30b-40b0-b59b-9c907016b91a‚èé       

kubectl get ns kube-system -o=jsonpath='{.metadata.uid}'

kubectl label ns demo pod-security.kubernetes.io/enforce=restricted
kubectl label ns kubedb pod-security.kubernetes.io/enforce=restricted

v2024.11.18 v2024.9.30 v2024.8.21 v2024.6.4 v2024.4.27


helm install kubedb oci://ghcr.io/appscode-charts/kubedb \
          --version v2024.11.18 \
          --namespace kubedb --create-namespace \
          --set-file global.license=$HOME/Downloads/kubedb-license-49d549b1-61b5-4bbe-ab7a-6f9fa663304e.txt \
          --set global.featureGates.MSSQLServer=true \
          --wait --burst-limit=10000 --debug

helm install kubedb oci://ghcr.io/appscode-charts/kubedb \
          --version v2024.4.27 \
          --namespace kubedb --create-namespace \
          --set-file global.license=$HOME/Downloads/kubedb-license-8c46fc66-d30b-40b0-b59b-9c907016b91a.txt \
          --set global.featureGates.MSSQLServer=true \
          --set global.featureGates.MySQL=true \
          --set global.featureGates.Postgres=true \
          --set global.featureGates.Redis=true \
          --set global.featureGates.Memcached=true \
          --set global.featureGates.Kafka=true \
          --wait --burst-limit=10000 --debug -f https://raw.githubusercontent.com/kubedb/installer/master/charts/kubedb/ci/ci-values.yaml

Update Catalog CRDs:
Latest: 
kubectl apply -f https://raw.githubusercontent.com/kubedb/installer/master/crds/kubedb-catalog-crds.yaml
kubectl apply -f https://github.com/kubedb/installer/raw/v2024.8.21/crds/kubedb-catalog-crds.yaml
kubectl apply -f https://github.com/kubeops/petset/raw/v0.0.6/crds/apps.k8s.appscode.com_petsets.yaml
kubectl apply -f https://github.com/kubeops/petset/raw/v0.0.6/crds/apps.k8s.appscode.com_placementpolicies.yaml

Upgrade:
helm upgrade kubedb oci://ghcr.io/appscode-charts/kubedb \
          --version v2024.8.21 \
          --namespace kubedb --create-namespace \
          --set-file global.license=$HOME/Downloads/kubedb-license-07545d0d-d007-419f-9723-bfeeab1c39a3.txt \
          --set kubedb-catalog.skipDeprecated=false \
          --set global.featureGates.MSSQLServer=true \
          --set global.featureGates.MySQL=true \
          --set global.featureGates.Postgres=true \
          --set global.featureGates.Redis=true \
          --set global.featureGates.Memcached=true \
          --wait --burst-limit=10000 --debug -f https://raw.githubusercontent.com/kubedb/installer/master/charts/kubedb/ci/ci-values.yaml

Uninstall KubeDB:
helm uninstall kubedb --namespace kubedb
kubectl get crd -o name | grep kubedb.com | xargs kubectl delete








########### TLS Stuff ###########
# Cert-Manager
kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.16.1/cert-manager.yaml

# CSI-Driver-CACerts
helm repo add appscode https://charts.appscode.com/stable/
helm repo update
helm upgrade -i \
  cert-manager-csi-driver-cacerts appscode/cert-manager-csi-driver-cacerts \
  -n cert-manager --wait






####### Monitoring Stuff 
# kube-prometheus-stack
helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
helm repo update
helm install prometheus prometheus-community/kube-prometheus-stack -n monitoring --set grafana.image.tag=7.5.5 --create-namespace
helm install prometheus prometheus-community/kube-prometheus-stack -n monitoring --create-namespace --wait --burst-limit=10000
helm uninstall prometheus -n monitoring

kubectl port-forward -n monitoring service/prometheus-grafana 3000:80

helm repo add appscode https://charts.appscode.com/stable/ 
helm repo update

# panopticon
helm upgrade -i panopticon oci://ghcr.io/appscode-charts/panopticon \
  --version v2024.9.30 \
  -n monitoring --create-namespace \
  --set-file license=$HOME/Downloads/kubedb-license-6b10b420-b3de-4ff4-b7e7-89f4ff6981f5.txt

helm upgrade -i kubedb-metrics oci://ghcr.io/appscode-charts/kubedb-metrics \
  --version v2024.9.30 \
  -n kubedb --create-namespace

Not needed usually:
helm upgrade -i monitoring-operator oci://ghcr.io/appscode-charts/monitoring-operator \
  --version v2024.11.18 \
  -n monitoring --create-namespace

#### Kubernetes Metrics Server
kubectl apply -f components.yaml

kubectl view-secret -n monitoring prometheus-grafana -a

helm upgrade -i coreos-prom-memcd charts/memcached-alerts -n demo 
    --create-namespace 
    --version=v2023.05.09 
    --set form.alert.labels.release=prometheus

It will provide the JSON for debuging:
helm install  --dry-run --debug memcached charts/memcached-alerts -n demo --create-namespace --version=v2023.05.09






###### KubeStash Installation ###########
helm install kubestash oci://ghcr.io/appscode-charts/kubestash \
        --version v2024.9.30 \
        --namespace kubestash --create-namespace \
        --set-file global.license=$HOME/Downloads/kubedb-license-07545d0d-d007-419f-9723-bfeeab1c39a3.txt \
        --wait --burst-limit=10000 --debug
Upgrade:
# Update catalog CRDs
$ kubectl apply -f https://github.com/kubestash/installer/raw/v2024.8.14/crds/kubestash-crds.yaml
helm upgrade kubestash oci://ghcr.io/appscode-charts/kubestash \
    --version v2024.8.14 \
    --namespace kubestash \
    --set-file global.license=/path/to/the/license.txt \
    --wait --burst-limit=10000 --debug
helm uninstall kubestash --namespace kubestash

kubectl delete crd -l=app.kubernetes.io/name=kubestash
kubectl delete crd -l=app.kubernetes.io/name=catalog






####### Storage ###########
Longhorn doesn't support Online Volume Expansion: 
https://longhorn.io/docs/archives/1.4.4/deploy/install/install-with-helm/

helm repo add longhorn https://charts.longhorn.io
helm repo update
helm install longhorn longhorn/longhorn --namespace longhorn-system --create-namespace


cannot uninstall Longhorn because deleting-confirmation-flag is set to `false`. Please set it to `true` using Longhorn UI or 
kubectl -n longhorn-system edit settings.longhorn.io deleting-confirmation-flag
helm uninstall longhorn -n longhorn-system



Miscellaneous:

#####Delete stucked namespace: 
kubectl get namespace "kubestash" -o json \
        | tr -d "\n" | sed "s/\"finalizers\": \[[^]]\+\]/\"finalizers\": []/" \
        | kubectl replace --raw /api/v1/namespaces/kubestash/finalize -f -



increase file watcher 
sudo sysctl -w fs.inotify.max_user_watches=2099999999
sudo sysctl -w fs.inotify.max_user_instances=2099999999
sudo sysctl -w fs.inotify.max_queued_events=2099999999