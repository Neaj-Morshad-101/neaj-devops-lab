openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout ./ca.key -out ./ca.crt -subj "/CN=MSSQLServer/O=kubedb"

kubectl create secret tls mssqlserver-ca --cert=ca.crt  --key=ca.key --namespace=demo 



kubectl view-secret -n demo mssqlserver 
kubectl view-secret -n demo mssqlserver-standalone-auth password

init images: 
neajmorshad/mssql-init-docker:tls


SELECT encrypt_option FROM sys.dm_exec_connections WHERE session_id = @@SPID


/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "
/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "Pa55w0rd!"


SELECT synchronization_health_desc from sys.dm_hadr_availability_group_states

SELECT is_local, role_desc, synchronization_health_desc from sys.dm_hadr_availability_replica_states

SELECT synchronization_health_desc from sys.dm_hadr_availability_replica_states WHERE is_local = 1 




ALTER DATABASE AgDB1 SET HADR RESUME;

select SERVERPROPERTY('IsSingleUser')



SELECT name FROM sys.databases
GO

CREATE DATABASE test; 
GO

CREATE TABLE Data (ID INT, NAME NVARCHAR(255), AGE INT);
INSERT INTO Data(ID, Name, Age) VALUES (1, 'John Doe', 25), (2, 'Jane Smith', 30);                                                                                    
GO 

Select * from data
go

INSERT INTO Data(ID, Name, Age) VALUES (3, 'John Doe', 25);

first fail-over: 
INSERT INTO Data(ID, Name, Age) VALUES (4, 'John Doe', 25);

2nd fail-over: 
INSERT INTO Data(ID, Name, Age) VALUES (5, 'John Doe', 25);

INSERT INTO Data(ID, Name, Age) VALUES (6, 'John Doe', 25);










