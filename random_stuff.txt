Pod Dashboard: 
Pod Name (md, mg)
Uptime (md mg 
Version (md)
QPS(md mg 
Latency mg
Buffer pool size md 
CPU 
Memory 
Open file descriptors
Connections md mg 
Command Operations Queries mg 
Networks
Aborted Connections 
Client Thread Activity 
Thread Cache 
Last Scrape Durations / Other Scrapes 

Pod Status Running 
Role (master, slave) 
My master 
My slaves 




Database Dashboard:
instance , pod, podname
UP, Uptime
QPS(md mg 
Latency mg
Buffer pool size md 
CPU 
Memory 
Open file descriptors
Connections md mg 
Command Operations Queries mg 
Networks
Aborted Connections 

Cluster Name, 
Cluster Members 
Primary Node 
Replication Delay / Latency / Lag 
Cluster Size by each pod (joined with how my nodes)
Cluster Status (Prmary, Secondary, Secondary to pods)
Last Election 

 
Pod Status Running 
Podwise Role (master, slave) 
My slaves
Mode 



Postgres Pod: 
up,
role,
connections  
cpu
memory 
file descriptors


Postgres DB: (By selecting one database)
QPS
Transactions 
Active Sessions 
Rows 


















30 sec lage petset create hoite, for standalone: 2:30 lage ready hoite 




0813 10:34:31.440187       1 secret.go:381] "Secret: demo/mssqlserver-ag-dbm-login created" mssqlserver="demo/mssqlserver-ag"
I0813 10:34:31.446465       1 client.go:84] Creating /v1, Kind=Secret demo/mssqlserver-ag-master-key.
I0813 10:34:31.454100       1 secret.go:381] "Secret: demo/mssqlserver-ag-master-key created" mssqlserver="demo/mssqlserver-ag"
I0813 10:35:12.233541       1 client.go:84] Creating apps.k8s.appscode.com/v1, Kind=PetSet demo/mssqlserver-ag.
I0813 10:35:12.263051       1 petset.go:162] "PetSet demo/mssqlserver-ag created" mssqlserver="demo/mssqlserver-ag"









Remove 
args
envs 
resources


  - containers
  - volumes
  - podPlacementPolicy



You can check out the full list [here](https://github.com/kmodules/offshoot-api/blob/master/api/v2/types.go#L26C1-L279C1).
Uses of some field of `spec.podTemplate` is described below,

#### spec.podTemplate.spec.tolerations

The `spec.podTemplate.spec.tolerations` is an optional field. This can be used to specify the pod's tolerations.

#### spec.podTemplate.spec.volumes

The `spec.podTemplate.spec.volumes` is an optional field. This can be used to provide the list of volumes that can be mounted by containers belonging to the pod.

#### spec.podTemplate.spec.podPlacementPolicy

`spec.podTemplate.spec.podPlacementPolicy` is an optional field. This can be used to provide the reference of the podPlacementPolicy. This will be used by our Petset controller to place the db pods throughout the region, zone & nodes according to the policy. It utilizes kubernetes affinity & podTopologySpreadContraints feature to do so.




#### spec.podTemplate.spec.containers

The `spec.podTemplate.spec.containers` can be used to provide the list containers and their configurations for to the database pod. some of the fields are described below,

##### spec.podTemplate.spec.containers[].name
The `spec.podTemplate.spec.containers[].name` field used to specify the name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.

##### spec.podTemplate.spec.containers[].args
`spec.podTemplate.spec.containers[].args` is an optional field. This can be used to provide additional arguments to database installation.

##### spec.podTemplate.spec.containers[].env

`spec.podTemplate.spec.containers[].env` is an optional field that specifies the environment variables to pass to the Redis containers.

##### spec.podTemplate.spec.containers[].resources

`spec.podTemplate.spec.containers[].resources` is an optional field. This can be used to request compute resources required by containers of the database pods. To learn more, visit [here](http://kubernetes.io/docs/user-guide/compute-resources/).