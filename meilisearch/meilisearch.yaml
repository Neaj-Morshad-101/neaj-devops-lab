# meilisearch-sts.yaml (Correct Standalone Production Pattern)

# 1. Headless Service (Best practice for StatefulSets, even with 1 replica)
apiVersion: v1
kind: Service
metadata:
  name: meilisearch-headless-svc
spec:
  clusterIP: None
  ports:
    - name: http
      port: 7700
  selector:
    app: meilisearch
---
# 2. Standard Service to provide a stable endpoint
apiVersion: v1
kind: Service
metadata:
  name: meilisearch-service
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 7700
      targetPort: 7700
  selector:
    app: meilisearch
---
# 3. StatefulSet for a single, resilient Meilisearch pod
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: meilisearch
spec:
  serviceName: "meilisearch-headless-svc"
  replicas: 1 # <-- ALWAYS 1 for open-source Meilisearch
  selector:
    matchLabels:
      app: meilisearch
  template:
    metadata:
      labels:
        app: meilisearch
    spec:
      containers:
      - name: meilisearch
        image: getmeili/meilisearch:v1.8
        ports:
        - containerPort: 7700
          name: http
        env:
        # Use a Kubernetes Secret in production, but hardcoding for this example
        - name: MEILI_MASTER_KEY
          value: "aSampleMasterKey"
        - name: MEILI_ENV
          value: "production"
        volumeMounts:
        - name: meilisearch-data
          mountPath: /meili_data
        readinessProbe:
          httpGet:
            path: /health
            port: 7700
          initialDelaySeconds: 5
          periodSeconds: 2
        livenessProbe:
          httpGet:
            path: /health
            port: 7700
          initialDelaySeconds: 20
          periodSeconds: 10
  # This PVC template ensures data persists across pod restarts
  volumeClaimTemplates:
  - metadata:
      name: meilisearch-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 5Gi # Adjust as needed